TOKEN TYPE	INPUT				EXPECTED OUTPUT
DECIMAL		"123456789294385739823"		decimal "123456789294385739823"
DECIMAL		"1 2 3 4 5 6 7 8 9"		decimal "1 2 3 4 5 6 7 8 9"
OCTAL		"0176543526374565"		octal "0176543526374565"
OCTAL		"01 07 03 05"			octal "01"
						octal "07"
						octal "03"
						octal "05"
HEXADECIMAL	"0x1a2b3c4d5e6f789"		hexadecimal "0x1a2b3c4d5e6f789"
HEXADECIMAL	"0x1d2e 0xe345"			hexadecimal "0x1d2e"
						hexadecimal "0xe345"
HEXADECIMAL	"0x"				malformed object "0x"
WORD		"word"				word "word"
WORD		"hi my name is"			word "hi"
						word "my"
						word "name"
						word "is"
WORD		"javaisaterriblelanguage"	word "javaisaterriblelanguage"
WORD		"today			is"	word "today"
						word "is"
WORD		"q1234"				word "q1234"
WORD		"q123word"			word "q123word"
WORD		"q123		dec135"		word "q123"
						word "dec135"
KEYWORD		"while"				keyword "while"
KEYWORD		"while goto if"			keyword "while"
						keyword "goto"
						keyword "if"
KEYWORD		"while			goto"	keyword "while"
						keyword "goto"
1-LINE CMT	"//"				
1-LINE CMT	"//here is some blank space"	
1-LINE CMT	"//hi world
		 word"				word "word"
MULTI CMT	"/*here is some stuff*/"	
MULTI CMT	"/*here is stuff		word "token"
		   here is more stuff
		   maybe some more here*/
		   token"			
OPERATOR	"("				left parentheses "("
OPERATOR	")"				right parentheses ")"
OPERATOR	"["				left bracket "["
OPERATOR	"]"				right bracket "]"
OPERATOR	"."				structure member "."
OPERATOR	"*"				indirect or multiply "*"
OPERATOR	"&"				address "&"
OPERATOR	"-"				minus or subtract or negative "-"
OPERATOR	"~"				1's comp "~"
OPERATOR	"/"				divide "/"
OPERATOR	"%"				modulus "%"
OPERATOR	"+"				add "+"
OPERATOR	"<"				less than "<"
OPERATOR	">"				greater than ">"
OPERATOR	"&"				bitwise and "&"
OPERATOR	"^"				bitwise exclusive or "^"
OPERATOR	"|"				bitwise or "|"
OPERATOR	","				comma ","
OPERATOR	"="				equals "="
OPERATOR	"?"				true conditional "?"
OPERATOR	":"				false conditional ":"
OPERATOR	">>"				shift right ">>"
OPERATOR	"<<"				shift left "<<"
OPERATOR	"<="				less or equal "<="
OPERATOR	">="				greater or equal ">="
OPERATOR	"=="				boolean equals "=="
OPERATOR	"&&"				logical and "&&"
OPERATOR	"||"				logical or "||"
OPERATOR	"+="				plusequals "+="
OPERATOR	"-="				minusequals "-="
OPERATOR	"*="				timesequals "*="
OPERATOR	"/="				divideequals "/="
OPERATOR	"%="				moduloequals "%="
OPERATOR	">>="				rightshiftequals ">>="
OPERATOR	"<<="				leftshiftequals "<<="
OPERATOR	"&="				bitwiseandequals "&="
OPERATOR	"^="				bitwiseexclusiveorequals "^="
OPERATOR	"|="				bitwiseorequals "|="
OPERATOR	"->"				structure pointer "->"
OPERATOR	"!="				notequals "!="
OPERATOR	"++"				increment "++"
OPERATOR	"--"				decrement "--"
OPERATOR	"+/*"				add "+"
						divide"/"
						indirect or multiply "*"
OPERATOR	"+ / -"				add "+"
						divide "/"
						minus or subtract or negative "-"
OPERATOR	"+=-="				plusequals "+="
						minusequals "-="
OPERATOR	"+= *="				plusequals "+="
						timesequals "*="
OPERATOR	">>=<<="			rightshiftequals ">>="
						leftshiftequals "<<="
OPERATOR	">>= <<="			rightshiftequals ">>="
						leftshiftequals "<<="
FLOAT		"1.5e-23"			floating point "1.5e-23"
FLOAT		"1e23"				floating point "1e23"
FLOAT		"1.5e23"			floating point "1.5e23"
FLOAT		"1."				malformed object "1."
SPACE		"     "
ESC*		start of text tab		"[0x2]"
ESC*		bell				"[0x7]"
ESC*		backspace newline		"[0x8]"
						"[0xA]"
*escape characters read in from file

QUOTES*		" take this as one "		string " take this as one "
QUOTES*		' this should be one thing'	string " this should be one thing "

*also read in from file

MAL		"!"				terminal does not accept
MAL		"\"				terminal does not accept
MAL		"@"				malformed object "@"

MULT		"11 0x504"			decimal "11"
						hexadecimal "0x504"
MULT		"11 word"			decimal "11"
						word "word"
MULT		"11 0123"			decimal "11"
						octal "0123"
MULT		"11 while"			decimal "11"
						keyword "while"
MULT		"11 1.5e23"			decimal "11"
						floating point "1.5e23"
MULT		"11++"				decimal "11"
						increment "++"
MULT		"11 0123 word while 0x504 1.5e23== !"	
							decimal "11"
							octal "0123"
							word "word"
							keyword "while"
							hexadecimal "0x504"
							floating point "1.5e23"
							boolean equals "=="
							malform object "!"

NONE		no argument			"Error: Incorrect Number of Arguments"

EMPTY		"" 				

WORD DELIN 	"[dogs] ca56ts claws\b"		leftbracket "["
     				     		word "dogs"
						rightbracket "]"
						word "ca56ts"
						word "claws"
						[0x8]

MULT	       	"apple>=pear@berry->.a"		word "apple"
						greater or equal ">="
						word "pear"
						malformed object "@"
						word "berry"
						structure pointer "->"
						structure member "."
						word "a"

FLOATS 		"1e4 1.2E6 1e-2 4.2E+4"		float "1e4"
	 		     	   		float "1.2E6"
						float "1e-2"
						float "4.2E+4"

INVLD FLOATS	"1. 1e 2E 3e- 4-"		malformed object "1."
						malformed object "1e"
						malformed object "2E"
						malformed object "3e-"
						decimal "4"
						minus or subtract or negative "-"

KEYWORDS	"enum if() sizeof switch234"	keyword "enum"
						keyword "if"
						left parentheses "("
						right parentheses ")"
						keyword "sizeof"
						word "switch234"

SINGLE QUOTES	"hello:'hi' 6 '3"		word "hello"
						false conditional ":"
						string "hi"
						decimal "6"
						malformed object "'"
						decimal "3"

NESTED OPS	"{fun}~'c'&&[10*3(var)]^=17.325E-2 00230"		malformed object "{"
									word "fun"
									malformed object "}"
									1's comp "~"
									string "c"
									logical and "&&"
									left bracket "["
									decimal "10"
									indirect or multiply "*"
									decimal "3"
									left parentheses "("
									word "var"
									right parentheses ")"
									right bracket "]"
									bitwiseexclusiveorequals "^="
									malformed object "17."
									floating point "325E-2"
									octal "00230"



OPERATORS	"0.++++=..*="			malformed object "0."
						increment "++"
						increment "++"
						equals "="
						structure member "."
						structure member "."
						timesequals "*="
							